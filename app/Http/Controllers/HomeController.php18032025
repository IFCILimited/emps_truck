<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Auth;
use DB;

class HomeController extends Controller
{


    public function index()
    {
        return view('landing.index');
    }

    // public function dashboard(){
    //     return view('layouts.dashboard_master');
    // }
    public function logout()
    {
        Auth::logout();
        return redirect()->route('home');
    }
    public function signin($roleid)
    {
        $role_id = decrypt($roleid);
        session(['role_id' => $role_id]);
        return redirect()->route('login');
    }

    public function contact()
    {
        return view('landing.contact');
    }
    public function about_us()
    {
        return view('landing.about_us');
    }
    public function feedback()
    {
        return view('landing.feedback');
    }
    public function impotrant_links()
    {
        return view('landing.important_links');
    }
    public function press_release()
    {
        return view('landing.press_release');
    }
    public function FAQs()
    {
        return view('landing.faq');
    }
    public function policy_document()
    {
        return view('landing.policy_doc');
    }
    public function policy_procedure()
    {
        return view('landing.policy_procedure');
    }
    public function suggestion()
    {
        return view('landing.suggestion');
    }
    public function support()
    {
        return view('landing.support');
    }
    public function who()
    {
        return view('landing.who');
    }
    public function dashboard()
    {


        // $claime2w1Amtsub = DB::table('buyer_details_view')->where('oem_status', 'A')->where('segment_id', '1')->where('vehicle_cat_id', '1')->whereNotNull('claim_id')->whereNotNull('lot_id')->sum('addmi_inc_amt');
        // $claime2w2Amtsub = DB::table('buyer_details_view')->where('oem_status', 'A')->where('segment_id', '1')->where('vehicle_cat_id', '2')->whereNotNull('claim_id')->whereNotNull('lot_id')->sum('addmi_inc_amt');
        // $claimse2wAmtsub = $claime2w1Amtsub + $claime2w2Amtsub;   
        // $claimse3wAmtsub = DB::table('buyer_details_view')->where('oem_status', 'A')->where('segment_id', '2')->where('vehicle_cat_id', '3')->whereNotNull('claim_id')->whereNotNull('lot_id')->sum('addmi_inc_amt');
        // $claimse3wL5Amtsub = DB::table('buyer_details_view')->where('oem_status', 'A')->where('segment_id', '2')->where('vehicle_cat_id', '4')->whereNotNull('claim_id')->whereNotNull('lot_id')->sum('addmi_inc_amt');
        // $fuel_co2 = DB::table('vw2_fuel_saved_co2') ->selectRaw('SUM(fuelsaved_perday) as total_fuelsaved_perday, SUM(totalfuelsaved) as total_fuel_saved, SUM(co2perday) as co2perday, SUM(co2total) as co2total')->get();

        $carbonData=DB::table('claim_fuel_co2_results')->first();

        $summary = DB::select('SELECT * FROM get_dashboard_consolidated_summary(?, ?, ?)', [NULL, NULL, NULL]);
        // dd($summary);
        $fomated = [];
        $total_L1_L2 = [
            "categroy_name" => "L1+L2",
            "segment_name" => "e-2W",
            "target_sales" => 0,
            "voucher_generated" => 0,
            "voucher_uploaded" => 0,
            "drive_vahan" => 0,
            "drive_portal" => 0,
            "emps_vahan" => 0,
            "emps_portal" => 0,
            "total_vahan" => 0,
            "total_portal" => 0,
            "claim_drive" => 0,
            "claim_emps" => 0,
            "face_scans_count" => 0,
            "buyer_id_drive" => 0,
            "drive_vahan_approved" => 0,
            "drive_vahan_unapproved" => 0,
            "drive_vahan_total" => 0,
            "perm_num_count_edrive" => 0,
            "percent_buyer_id" => 0,
            "percent_face_scanned" => 0,
            "percentVoucherGenerated" => 0,
            "percentVoucherUploaded" => 0,
            "percentPermanentNumber" => 0
        ];
        foreach ($summary as $category) {
            if ($category->category_name == "L1" || $category->category_name == "L2") {
                $total_L1_L2['target_sales'] = (float) $category->target_sales;
                $total_L1_L2['voucher_generated'] += (int) $category->voucher_generated;
                $total_L1_L2['voucher_uploaded'] += (int) $category->voucher_uploaded;
                $total_L1_L2['drive_vahan'] += (int) $category->drive_vahan;
                $total_L1_L2['drive_portal'] += (int) $category->drive_portal;
                $total_L1_L2['emps_vahan'] += (int) $category->emps_vahan;
                $total_L1_L2['emps_portal'] += (int) $category->emps_portal;
                $total_L1_L2['total_vahan'] += (int) $category->total_vahan;

                $total_L1_L2['drive_vahan_approved'] += (int) $category->vahan_edrive_approved;
                $total_L1_L2['drive_vahan_unapproved'] += (int) $category->vahan_edrive_unapproved;
                $total_L1_L2['drive_vahan_total'] += (int) $category->vahan_edrive_total;
                // $total_L1_L2['total_portal'] += (int) $category->total_portal;
                // $total_L1_L2['total_portal'] += (int) $category->emps_portal + (int) $category->face_scans_count;
                $total_L1_L2['total_portal'] += (int) $category->emps_portal + (int) $category->buyer_id_generated_edrive;
                $total_L1_L2['claim_drive'] += (int) $category->claim_drive;
                $total_L1_L2['claim_emps'] += (int) $category->claim_emps;
                $total_L1_L2['face_scans_count'] += (int) $category->face_scans_count;
                $total_L1_L2['buyer_id_drive'] += (int) $category->buyer_id_generated_edrive;
                $total_L1_L2['perm_num_count_edrive'] += (int) $category->perm_num_count;
            }else{
                $fomated[] = [
                    "categroy_name" => $category->category_name,
                    "segment_name" => $category->segment_name,
                    "target_sales" => $category->target_sales,
                    "voucher_generated" => $category->voucher_generated,
                    "voucher_uploaded" => $category->voucher_uploaded,
                    "drive_vahan" => $category->drive_vahan,
                    "drive_portal" => $category->drive_portal,
                    "emps_vahan" => $category->emps_vahan,
                    "emps_portal" => $category->emps_portal,
                    "total_vahan" => $category->total_vahan,

                    "drive_vahan_approved" => $category->vahan_edrive_approved,
                    "drive_vahan_unapproved" => $category->vahan_edrive_unapproved,
                    "drive_vahan_total" => $category->vahan_edrive_total,
                    // "total_portal" => $category->total_portal,
                    // "total_portal" => (int) $category->emps_portal + (int) $category->face_scans_count,
                    "total_portal" => (int) $category->emps_portal + (int) $category->buyer_id_generated_edrive,
                    "claim_drive" => $category->claim_drive,
                    "claim_emps" => $category->claim_emps,
                    "face_scans_count" => $category->face_scans_count,
                    "buyer_id_drive" => $category->buyer_id_generated_edrive,
                    "perm_num_count_edrive" => $category->perm_num_count,
                ];
            }
        };

        $fomated[] = $total_L1_L2;
        $fomated = collect($fomated);
        $fomated = $fomated->sortBy('segment_name');

        // dd($fomated);
        // $maxDateOfVahan = DB::table('vahan_api_model_data')->max('api_to_date');
        $maxDateOfVahan = DB::table('vahan_api_model_data_approved')->max('api_to_date');

        return view('landing.dashboard_updated', compact('fomated', 'maxDateOfVahan', 'carbonData'));
    }



    public function ClaimSubmissionAnnouncements()
    {
        return view('landing.ClaimSubmissionAnnouncements');
    }
    public function draftPMPGuidelines()
    {
        return view('landing.draft_guideline');
    }
    public function EVPCSGuidelines()
    {
        return view('landing.EVPCS_guideline');
    }
    public function empsSales()
    {
        dd(empsSale());
        return view('landing.draft_guideline');
    }
    public function models()
    {

            $oem_name = DB::table('users')
                    ->select('users.id as oem_id', 'users.name as oem_name')
                    ->join('model_has_roles', 'users.id', '=', 'model_has_roles.model_id')
                    ->where('users.oem_type_id', 3)
                    ->where('model_has_roles.role_id', 4)
                    ->where('users.approval_for_post_reg', 'A')
                    ->where('users.post_registration_status', 'A')
                    ->orderBy('users.name')
                    ->get();
            $model_detail = DB::table('vw_model_details')
            ->where('mhi_flag','A')
            ->orderBy('vw_model_details.model_name')->get();


            return view('landing.models', compact('oem_name', 'model_detail'));
    }
}
